Singleton för MySQL connectionen, lättare att sköta, kan hålla en connection 	uppe, ex. under hela app-tiden

Gör UI:t i scene builder, hitta någon lämplig kurs för att jobba med FXML och 	JavaFX (Java):
		https://app.pluralsight.com/library/courses/java-se-java-fx-		application-building-your-first/table-of-contents

Enum klass för alla dom olika färgade blupparna, eller ås kan man man använda
	Colors.ENUM för att hålla koll på dom etc.

Kolla igenom den här tutorialen:
	https://www.youtube.com/watch?	v=cgv63JD7pfc&list=PLS1QulWo1RIaUGP446_pWLgTZPiFizEMq&index=6


////////////////////////////////////////////////////////////////////////
//				TODO				      //
////////////////////////////////////////////////////////////////////////

BUGGAR:
	- invocationException på spelviewen orsakas antagligen av att den 		försöker använda klassen innan den har instansats, man hade
		kunnat ha en button som liksom laddar allting allt är 		invisible från början så laddas det när man känner sig "redo"

ATT GÖRA:

	spelsidan
		- ska komma upp en sån "action" ruta som frågar om man vill 		spela igen (när spelet nått sitt slut)
		- man ska kunna navigera sig därifrån, och då bli promptad
		om man verkligen vill lämna

	fixa highscore sida
		- kanske någon slags dropdown list så man kan se vilka drag 	
		- lista som är ett ascending resultset från tablen sorterat på
		score, måste sätta score
		

	fixa en första sida
		- man registrerar sitt namn
		- man väljer hur många färger man ska ha (6 / 8)
			- detta sparas i en variabel i själva spel FXML:en
		

	
	



Färger: 6 eller 8
Hål: 4


Eftersom alla rader kommer visas från början så får man styra det hela genom 		att tillåta / inte tillåta att man sätter på raden man försöker sätta 		en cirkel i

Det ska finnas två views, en som är om man vill LOAD:a ett tidigare spel, 	kolla på HIGHSCORE:n



Enum klass för alla dom olika färgade blupparna, eller ås kan man man använda
	Colors.ENUM, men om man vill ha egna färger så får man göra en egen 		ENUM klass med alla RGB värden


EVENTUELLT: 
	Använd 3D objekt, typ sphere och dyl.





